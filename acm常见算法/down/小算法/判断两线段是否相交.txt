语法：result=sectintersect(Point p1,Point p2,Point p3,Point p4);
 
 

 
 
参数：
 
 

 
 
p1～4：
 
 
两条线段的四个端点
 
 

 
 
返回值：
 
 
0：两线段不相交；1：两线段相交；2两线段首尾相接
 
 

 
 
注意：
 
 
 
 
 

 
 
 
 
 
p1!=p2;p3!=p4;
 
 

 
 
源程序：
 
 
 
 
 

 
 
 
 
 
#define MIN(x,y) (x < y ? x : y)

#define MAX(x,y) (x > y ? x : y) 
typedefstruct {

    double x,y;

} Point;
int lineintersect(Point p1,Point p2,Point p3,Point p4)

{

    Point tp1,tp2,tp3;

    if ((p1.x==p3.x&&p1.y==p3.y)||(p1.x==p4.x&&p1.y==p4.y)||(p2.x==p3.x&&p2.y==p3.y)||(p2.x==p4.x&&p2.y==p4.y))

        return 2;

//快速排斥试验

    if ((MIN(p1.x,p2.x)<p3.x&&p3.x<MAX(p1.x,p2.x)&&MIN(p1.y,p2.y)<p3.y<MAX(p1.y,p2.y))||

            (MIN(p1.x,p2.x)<p4.x&&p3.x<MAX(p1.x,p2.x)&&MIN(p1.y,p2.y)<p3.y<MAX(p1.y,p2.y)))

        ;elsereturn 0;
//跨立试验

    tp1.x=p1.x-p3.x;

    tp1.y=p1.y-p3.y;

    tp2.x=p4.x-p3.x;

    tp2.y=p4.y-p3.y;

    tp3.x=p2.x-p3.x;

    tp3.y=p2.y-p3.y;

    if ((tp1.x*tp2.y-tp1.y*tp2.x)*(tp2.x*tp3.y-tp2.y*tp3.x)>=0) return 1; elsereturn 0;

} 
