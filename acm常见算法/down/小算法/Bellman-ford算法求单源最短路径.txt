语法：result=Bellman_ford(Graph G,int n,int s,int t,int path[],int success);
参数：
G：图，用邻接矩阵表示
n：图的顶点个数
s：开始节点
t：目标节点
path[]：用于返回由开始节点到目标节点的路径
success：函数是否执行成功
返回值：最短路径长度
注意：输入的图的权可以为负，如果存在一个从源点可达的权为负的回路则success=0
顶点标号从0开始
用如下方法打印路径：
    i=t;

    while (i!=s)

        {

        printf("%d<--",i+1);

        i=path;

        }

    printf("%d\n",s+1); 

源程序：
int Bellman_ford(Graph G,int n,int s,int t,int path[],int success)
{
    int i,j,k,d[max_vertexes];
    for (i=0;i<n;i++) {d=infinity;path=0;}
    d[s]=0;
    for (k=1;k<n;k++)
        for (i=0;i<n;i++)
            for (j=0;j<n;j++)
                if (d[j]>d+G[j]) {d[j]=d+G[j];path[j]=i;}
    success=0;
    for (i=0;i<n;i++)
        for (j=0;j<n;j++)
            if (d[j]>d+G[j]) return 0;
    success=1;
    return d[t];

} 
